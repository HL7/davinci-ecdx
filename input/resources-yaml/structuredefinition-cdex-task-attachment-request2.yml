# input/resources-yaml/structuredefinition-cdex-task-attachment-request2.yml

resourceType: StructureDefinition
id: cdex-task-attachment-request2
url: 'http://hl7.org/fhir/us/davinci-cdex/StructureDefinition/cdex-task-attachment-request2'
name: CDexTaskAttachmentRequest2
title: CDex Task Attachment Request Profile2
status: active
description: |-
  This Task profile is a specialization of the [Da Vinci CDex Task Data Request](http://hl7.org/fhir/us/davinci-cdex/StructureDefinition/hrex-task-data-request) It defines a request for attachments for Claims and Prior Authorization that is compatible with existing X12 277 and 278 transactions.  It adds the following *mandatory* (min=1) constraints:
  - A Task.meta.profile element claiming that the resource instance conforms to this profile.
  - A [contained](http://hl7.org/fhir/R4/references.html) Patient Resource defined by the [CDex Patient Demographics Profile](http://hl7.org/fhir/us/davinci-cdex/StructureDefinition/cdex-patient-demographics) and communicating additional patient demographic data elements. 
  - A Task.identifier element representing the payers tracking identifier (referred to as the “re-association tracking control numbers”)
  - A Task.requester.identifier element representing the Payer ID
  - A Task.for element:
    - a reference element referencing the contained Patient Resource
  - A Task.reasonCode to communicate whether the attachments are for a Claim or Prior Authorization
  - A Task.reasonReference.reference referencing the Claim or Prior Authorization ID (business Identifier)
  - A Task.input element to communicate to the provider what attachments are needed using LOINC attachment codes
    - Note that the extension on the Task.input element “code” slice representing line item numbers in the Claim or Prior Authorization is inherited from Da Vinci CDex Task Data Request.
  - A Task.input element representing the Payer endpoint URL to communicate to the provider to submit the attachments using the `$submit-attachment` operation
  - A Task.input element representing date of service or starting date of the service for the claim or prior authorization


   In addition, the following *must support* constraint:
  - A Task.Restriction.period element representing the due date for submitting the attachments

  In addition, the following *optional* constraint:
  - A Task.input element representing a flag to indicate whether the requested data can be sent in multiple submissions

fhirVersion: 4.0.1
kind: resource
abstract: false
type: Task
baseDefinition: 'http://hl7.org/fhir/us/davinci-cdex/StructureDefinition/cdex-task-data-request'
derivation: constraint
differential:
  element:

    - id: Task.meta
      path: Task.meta
      min: 1
      mustSupport: true
      
    - id: 'Task.meta.profile'
      path: 'Task.meta.profile'
      slicing:
        discriminator:
          - type: pattern
            path: $this
        rules: open
      comment: >-
        meta.profile is required as a matter of convenience of receiving
        systems. The meta.profile should be used by the Server to
        hint/assert/declare that this instance conforms to one (or more) stated
        profiles (with business versions). meta.profile does not capture any
        business logic, processing directives, or semantics (for example,
        inpatient or outpatient). Clients should not assume that the Server will
        exhaustively indicate all profiles with all versions that this instance
        conforms to. Clients can (and should) perform their own validation of
        conformance to the indicated profile(s) and to any other profiles of
        interest.
      min: 1
      mustSupport: true

    - id: 'Task.meta.profile:cdex'
      path: 'Task.meta.profile'
      sliceName: cdex
      short: CDex Attachment Request Profile
      definition: Profile declaration asserting that this resource instance contains all the data elements required for CDex attachment requests.
      min: 1
      max: '1'
      # type:
      #   - code: canonical
      fixedCanonical: http://hl7.org/fhir/us/davinci-cdex/StructureDefinition/cdex-task-attachment-request2
      mustSupport: true 

    - id: Task.contained
      path: Task.contained
      min: 1
      slicing:
        discriminator:
          - type: type
            path: $this
        rules: open
      mustSupport: true

    - id: Task.contained:patient
      path: Task.contained
      sliceName: patient
      definition: >-
        The contained patient profile representing the patient data elements used to verify patient identity for compliance regulations (such as HIPAA).
      short: Contained Patient resource
      min: 1
      max: '1'
      type:
        - code: Patient
          profile:
            - 'http://hl7.org/fhir/us/davinci-cdex/StructureDefinition/cdex-patient-demographics'
      mustSupport: true

    # - id: Task.contained:claim
    #   path: Task.contained
    #   sliceName: claim
    #   definition: >-
    #     The contained claim profile representing the required claim or pre-authorization data needed for attachments requests
    #   short: Contained Claim resource
    #   min: 1
    #   max: '1'
    #   type:
    #     - code: Claim
    #       profile:
    #         - 'http://hl7.org/fhir/us/davinci-cdex/StructureDefinition/cdex-claim'
    #   mustSupport: true

    - id: Task.identifier
      path: Task.identifier
      min: 1
      slicing:
        discriminator:
          - type: pattern
            path: $this
        rules: open
      mustSupport: true

    - id: 'Task.identifier:tracking-id'
      path: Task.identifier
      sliceName: tracking-id
      short: Re-association tracking control number
      definition: A unique claim/prior authorization identifier (referred to as the “re-association tracking control numbers”)
      min: 1
      max: '1'
      patternIdentifier:
        type:         
          coding:
            - system: 'http://hl7.org/fhir/us/davinci-cdex/CodeSystem/cdex-temp'
              code: tracking-id
      mustSupport: true

    - id: 'Task.identifier:tracking-id.value'
      path: Task.identifier.value
      min: 1
      max: '1'
      mustSupport: true

    - id: Task.for
      path: Task.for
      mustSupport: true
  
    - id: Task.for.reference
      path: Task.for.reference
      short: Contained Patient
      definition: Reference to contained Patient representing patient data elements are used to verify patient identity for compliance regulations (such as HIPAA).
      comment: For requesting attachments, a reference to a contained Patient Resource defined by the CDex Patient Demographics Profile is used to representing the patient data elements used to verify patient identity for compliance regulations (such as HIPAA).
      min: 1
      fixedString: '#patient'
      mustSupport: true
      # add invariant  

    # - id: Task.for.identifier     # Currently ms 0..1 in data profile!!
    #   path: Task.for.identifier
    #   # short: Payer ID
    #   # definition: business identifier representing the Patient ID
    #   min: 1
    #   mustSupport: true
    #  identifier on the contained patient
 
    - id: Task.requester
      path: Task.requester
      mustSupport: true

    - id: Task.requester.identifier
      path: Task.requester.identifier
      # short: Payer ID
      # definition: business identifier representing the Payer ID
      min: 1
      mustSupport: true

    - id: Task.reasonCode
      path: Task.reasonCode
      min: 1
      mustSupport: true

    - id: Task.reasonCode.coding
      path: Task.reasonCode.coding
      min: 1
      slicing:
        discriminator:
          - type: value
            path: $this  #if the element has a terminology binding, a required binding with a Value Set that enumerates the list of possible codes in the value set ("extensional definition")
        rules: open
      mustSupport: true

    - id: Task.reasonCode.coding:use
      path: Task.reasonCode.coding
      sliceName: use
      min: 1
      max: '*'
      binding:
        strength: required
        valueSet: 'http://hl7.org/fhir/us/davinci-cdex/ValueSet/cdex-claim-use' 
      mustSupport: true

    - id: Task.reasonCode.coding:use.system
      path: Task.reasonCode.coding.system
      mustSupport: true

    - id: Task.reasonCode.coding:use.code
      path: Task.reasonCode.coding.code
      short: claim | preauthorization
      min: 1
      mustSupport: true

    - id: Task.reasonCode.text
      path: Task.reasonCode.text
      short: claim | preauthorization
      binding:
        strength: required
        valueSet: 'http://hl7.org/fhir/us/davinci-cdex/ValueSet/cdex-claim-use'
      mustSupport: true

    - id: Task.reasonReference
      path: Task.reasonReference
      min: 1
      mustSupport: true

    - id: Task.reasonReference.identifier
      path: Task.reasonReference.identifier
      short: Claim or Prior Authorization ID
      definition: The business identifier representing the Claim or Prior Authorization ID
      min: 1
      mustSupport: true    
      # add invariant 

    - id: Task.restriction
      path: Task.restriction
      min: 0
      mustSupport: true
    
    - id: Task.restriction.period
      path: Task.restriction.period
      short: Attachments due date
      definition: due date for the attachments
      # comment: Note that `Task.restriction.period.end` is the due date representing the time by which the task should be completed.
      min: 0
      mustSupport: true

    - id: Task.input
      path: Task.input
      slicing:
        discriminator:
          - type: pattern
            path: type
        rules: open
      # min: 1
      mustSupport: true

    - id: 'Task.input:code'
      path: Task.input
      sliceName: code
      short: Attachment Codes
      # comment: In future version will consider adding Task.input query slice (an existing invariant to require one or the other)
      min: 1
      binding:
        strength: extensible
        valueSet: 'http://hl7.org/fhir/us/davinci-cdex/ValueSet/cdex-attachment' 
      mustSupport: true
      
    - id: 'Task.input:payer-url'
      path: Task.input
      sliceName: payer-url
      short: Payer Url
      definition: The Payer Endpoint URL for submitting attachment using the $submit-attachment operation.
      min: 1
      max: '1'
      mustSupport: true

    - id: 'Task.input:payer-url.type'
      path: Task.input.type
      patternCodeableConcept:
        coding:
          - system: 'http://hl7.org/fhir/us/davinci-cdex/CodeSystem/cdex-temp'
            code: payer-url
      mustSupport: true

    - id: 'Task.input:payer-url.value[x]'
      path: 'Task.input.value[x]'
      short: Payer url value
      type:
        - code: url
      mustSupport: true

    - id: 'Task.input:service-date'
      path: Task.input
      sliceName: service-date
      short: Service Date
      definition: Date of service or starting date of the service for the claim or prior authorization. This parameter **SHALL** be present and precise to the day.
      min: 1
      max: '1'
      mustSupport: true

    - id: 'Task.input:service-date.type'
      path: Task.input.type
      patternCodeableConcept:
        coding:
          - system: 'http://hl7.org/fhir/us/davinci-cdex/CodeSystem/cdex-temp'
            code: service-date
      mustSupport: true

    - id: 'Task.input:service-date.value[x]'
      path: 'Task.input.value[x]'
      short: Service Date value
      type:
        - code: date
      mustSupport: true

    - id: 'Task.input:multiple-submits'
      path: Task.input
      sliceName: multiple-submits
      short: Multiple submits flag
      definition: |-
        Flag to indicate whether the requested data can be submitted in multiple submissions. The default meaning when this input is omitted is multiple-submits = "false" -  all the requested data should be submitted in a single transaction.
      max: '1'
      # mustSupport: true

    - id: 'Task.input:multiple-submits.type'
      path: Task.input.type
      patternCodeableConcept:
        coding:
          - system: 'http://hl7.org/fhir/us/davinci-cdex/CodeSystem/cdex-temp'
            code: multiple-submits-flag
      # mustSupport: true


    - id: 'Task.input:multiple-submits.value[x]'
      path: 'Task.input.value[x]'
      short: Multiple submits flag value
      type:
        - code: boolean
      # mustSupport: true

